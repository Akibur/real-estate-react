{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  transfers: [],\n  transfer: {},\n  userTransfers: [],\n  loading: false,\n  statusUpdateLoading: false,\n  transferError: {\n    isError: false,\n    message: \"\"\n  },\n  alert: \"\"\n};\nexport const getAllTransfers = createAsyncThunk('transfers/getAllTransfers', async thunkAPI => {\n  try {\n    const res = await fetch('http://localhost:5000/transfers', {\n      headers: {\n        \"authorization\": `Bearer ${localStorage.getItem('idToken')}`\n      }\n    }).then(data => data.json());\n    return res;\n  } catch (err) {\n    if (!err.response) {\n      throw err;\n    }\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nexport const getUserTransfers = createAsyncThunk('transfers/getUserTransfers', async (userEmail, thunkAPI) => {\n  console.log(userEmail);\n  try {\n    const res = await fetch(`http://localhost:5000/transfers/user/${userEmail.email}`, {\n      headers: {\n        \"authorization\": `Bearer ${localStorage.getItem('idToken')}`\n      }\n    }).then(data => data.json());\n    return res;\n  } catch (err) {\n    if (!err.response) {\n      throw err;\n    }\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nexport const createTransfer = createAsyncThunk('transfers/createTransfer', async (transfer, thunkAPI) => {\n  try {\n    const res = await fetch(`http://localhost:5000/transfers/`, {\n      method: 'POST',\n      headers: {\n        \"authorization\": `Bearer ${localStorage.getItem('idToken')}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(transfer)\n    }).then(data => data.json());\n    return res;\n  } catch (err) {\n    console.log(\"try catch err\", err);\n    if (!err.response) {\n      throw err;\n    }\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nexport const updateTransfer = createAsyncThunk('transfers/updateTransfer', async (update, thunkAPI) => {\n  const {\n    email,\n    id,\n    status\n  } = update;\n  try {\n    const transfer = {\n      status: status\n    };\n    const res = await fetch(`http://localhost:5000/transfers/${id}`, {\n      method: 'PATCH',\n      headers: {\n        \"authorization\": `Bearer ${localStorage.getItem('idToken')}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(transfer)\n    }).then(data => data.json());\n    if (email) thunkAPI.dispatch(getUserTransfers({\n      email: email\n    }));else thunkAPI.dispatch(getAllTransfers());\n    return res;\n  } catch (err) {\n    console.log(\"try catch err\", err);\n    if (!err.response) {\n      throw err;\n    }\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nconst transfersSlice = createSlice({\n  name: 'transfers',\n  initialState,\n  reducers: {\n    //pass the initial state and any payload which is in, action.payload \n    // createTransfer(state, action) {\n    //     // Create a transfer\n    // },\n    // deleteTransfer(state, action) {\n    //     // delete a transfer\n    // },\n  },\n  extraReducers: {\n    //GetTransfers\n    [getAllTransfers.pending]: state => {\n      if (state.transfers.length < 1) state.loading = true;\n    },\n    [getAllTransfers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.transfers = action.payload;\n    },\n    [getAllTransfers.rejected]: (state, action) => {\n      state.loading = false;\n      state.transferError.isError = true;\n      state.transferError.message = action;\n    },\n    //GetUserTransfers\n    [getUserTransfers.pending]: state => {\n      if (state.userTransfers.length < 1) state.loading = true;\n    },\n    [getUserTransfers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.userTransfers = action.payload;\n    },\n    [getUserTransfers.rejected]: (state, action) => {\n      state.loading = false;\n      state.transferError.isError = true;\n      state.transferError.message = action;\n    },\n    //CreateTransfer\n    [createTransfer.pending]: state => {\n      state.loading = true;\n    },\n    [createTransfer.fulfilled]: (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.alert = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n    },\n    [createTransfer.rejected]: (state, action) => {\n      state.loading = false;\n      state.transferError.isError = true;\n      state.transferError.message = action.error.message;\n    },\n    //UpdateTransfer\n    [updateTransfer.pending]: state => {\n      state.statusUpdateLoading = true;\n    },\n    [updateTransfer.fulfilled]: (state, action) => {\n      state.statusUpdateLoading = false;\n      console.log(action.payload);\n    },\n    [updateTransfer.rejected]: (state, action) => {\n      state.statusUpdateLoading = false;\n      state.transferError.isError = true;\n      state.transferError.message = action.error.message;\n    }\n  }\n});\nexport const transfersActions = transfersSlice.actions;\nexport default transfersSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","transfers","transfer","userTransfers","loading","statusUpdateLoading","transferError","isError","message","alert","getAllTransfers","thunkAPI","res","fetch","headers","localStorage","getItem","then","data","json","err","response","rejectWithValue","getUserTransfers","userEmail","console","log","email","createTransfer","method","body","JSON","stringify","updateTransfer","update","id","status","dispatch","transfersSlice","name","reducers","extraReducers","pending","state","length","fulfilled","action","payload","rejected","error","transfersActions","actions","reducer"],"sources":["/Users/akiburrahman/Desktop/Development/Msc/real-estate/real-estate-react/src/store/transfers-slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    transfers: [],\n    transfer: {},\n    userTransfers: [],\n    loading: false,\n    statusUpdateLoading: false,\n    transferError: {\n        isError: false,\n        message: \"\"\n    },\n    alert: \"\",\n};\n\n\nexport const getAllTransfers = createAsyncThunk(\n    'transfers/getAllTransfers',\n    async (thunkAPI) => {\n        try {\n            const res = await fetch('http://localhost:5000/transfers',\n                {\n                    headers: {\n                        \"authorization\": `Bearer ${localStorage.getItem('idToken')}`\n                    }\n                }\n            ).then(\n                (data) => data.json()\n            );\n            return res;\n        } catch (err) {\n            if (!err.response) {\n                throw err;\n            }\n            return thunkAPI.rejectWithValue(err.response.data);\n        }\n\n    });\nexport const getUserTransfers = createAsyncThunk(\n    'transfers/getUserTransfers',\n    async (userEmail, thunkAPI) => {\n        console.log(userEmail);\n        try {\n            const res = await fetch(`http://localhost:5000/transfers/user/${userEmail.email}`, {\n                headers: {\n                    \"authorization\": `Bearer ${localStorage.getItem('idToken')}`\n                }\n            }\n            ).then(\n                (data) => data.json()\n            );\n            return res;\n        } catch (err) {\n            if (!err.response) {\n                throw err;\n            }\n            return thunkAPI.rejectWithValue(err.response.data);\n        }\n\n    });\nexport const createTransfer = createAsyncThunk(\n    'transfers/createTransfer',\n    async (transfer, thunkAPI) => {\n\n        try {\n            const res = await fetch(`http://localhost:5000/transfers/`, {\n                method: 'POST',\n                headers: {\n                    \"authorization\": `Bearer ${localStorage.getItem('idToken')}`,\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify(transfer)\n            }).then(\n                (data) => data.json()\n            );\n            return res;\n        } catch (err) {\n            console.log(\"try catch err\", err);\n\n            if (!err.response) {\n                throw err;\n            }\n            return thunkAPI.rejectWithValue(err.response.data);\n        }\n\n\n    });\nexport const updateTransfer = createAsyncThunk(\n    'transfers/updateTransfer',\n    async (update, thunkAPI) => {\n        const { email, id, status } = update;\n        try {\n            const transfer = { status: status };\n            const res = await fetch(`http://localhost:5000/transfers/${id}`, {\n                method: 'PATCH',\n                headers: {\n                    \"authorization\": `Bearer ${localStorage.getItem('idToken')}`,\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify(transfer)\n            }).then(data => data.json());\n            if (email) thunkAPI.dispatch(getUserTransfers({ email: email }));\n            else thunkAPI.dispatch(getAllTransfers());\n\n            return res;\n        } catch (err) {\n            console.log(\"try catch err\", err);\n            if (!err.response) {\n                throw err;\n            }\n            return thunkAPI.rejectWithValue(err.response.data);\n        }\n    });\n\nconst transfersSlice = createSlice({\n    name: 'transfers',\n    initialState,\n    reducers: {\n        //pass the initial state and any payload which is in, action.payload \n        // createTransfer(state, action) {\n        //     // Create a transfer\n        // },\n        // deleteTransfer(state, action) {\n        //     // delete a transfer\n        // },\n    },\n    extraReducers: {\n        //GetTransfers\n        [getAllTransfers.pending]: (state) => {\n            if (state.transfers.length < 1) state.loading = true;\n        },\n        [getAllTransfers.fulfilled]: (state, action) => {\n            state.loading = false;\n            state.transfers = action.payload;\n        },\n        [getAllTransfers.rejected]: (state, action) => {\n            state.loading = false;\n            state.transferError.isError = true;\n            state.transferError.message = action;\n        },\n\n        //GetUserTransfers\n        [getUserTransfers.pending]: (state) => {\n            if (state.userTransfers.length < 1) state.loading = true;\n        },\n        [getUserTransfers.fulfilled]: (state, action) => {\n            state.loading = false;\n            state.userTransfers = action.payload;\n        },\n        [getUserTransfers.rejected]: (state, action) => {\n            state.loading = false;\n            state.transferError.isError = true;\n            state.transferError.message = action;\n        },\n\n        //CreateTransfer\n        [createTransfer.pending]: (state) => {\n            state.loading = true;\n        },\n        [createTransfer.fulfilled]: (state, action) => {\n            state.loading = false;\n            state.alert = action?.payload?.message;\n        },\n        [createTransfer.rejected]: (state, action) => {\n            state.loading = false;\n            state.transferError.isError = true;\n            state.transferError.message = action.error.message;\n        },\n\n        //UpdateTransfer\n        [updateTransfer.pending]: (state) => {\n            state.statusUpdateLoading = true;\n        },\n        [updateTransfer.fulfilled]: (state, action) => {\n            state.statusUpdateLoading = false;\n            console.log(action.payload);\n        },\n        [updateTransfer.rejected]: (state, action) => {\n            state.statusUpdateLoading = false;\n            state.transferError.isError = true;\n            state.transferError.message = action.error.message;\n        },\n\n\n    },\n});\n\nexport const transfersActions = transfersSlice.actions;\n\nexport default transfersSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE,EAAE;EACjBC,OAAO,EAAE,KAAK;EACdC,mBAAmB,EAAE,KAAK;EAC1BC,aAAa,EAAE;IACXC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACb,CAAC;EACDC,KAAK,EAAE;AACX,CAAC;AAGD,OAAO,MAAMC,eAAe,GAAGZ,gBAAgB,CAC3C,2BAA2B,EAC3B,MAAOa,QAAQ,IAAK;EAChB,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EACrD;MACIC,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE;MAC/D;IACJ,CAAC,CACJ,CAACC,IAAI,CACDC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CACxB;IACD,OAAOP,GAAG;EACd,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACV,IAAI,CAACA,GAAG,CAACC,QAAQ,EAAE;MACf,MAAMD,GAAG;IACb;IACA,OAAOT,QAAQ,CAACW,eAAe,CAACF,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EACtD;AAEJ,CAAC,CAAC;AACN,OAAO,MAAMK,gBAAgB,GAAGzB,gBAAgB,CAC5C,4BAA4B,EAC5B,OAAO0B,SAAS,EAAEb,QAAQ,KAAK;EAC3Bc,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACtB,IAAI;IACA,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAE,wCAAuCW,SAAS,CAACG,KAAM,EAAC,EAAE;MAC/Eb,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE;MAC/D;IACJ,CAAC,CACA,CAACC,IAAI,CACDC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CACxB;IACD,OAAOP,GAAG;EACd,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACV,IAAI,CAACA,GAAG,CAACC,QAAQ,EAAE;MACf,MAAMD,GAAG;IACb;IACA,OAAOT,QAAQ,CAACW,eAAe,CAACF,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EACtD;AAEJ,CAAC,CAAC;AACN,OAAO,MAAMU,cAAc,GAAG9B,gBAAgB,CAC1C,0BAA0B,EAC1B,OAAOI,QAAQ,EAAES,QAAQ,KAAK;EAE1B,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAiC,EAAE;MACxDgB,MAAM,EAAE,MAAM;MACdf,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC;QAC5D,cAAc,EAAE;MACpB,CAAC;MACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC9B,QAAQ;IACjC,CAAC,CAAC,CAACe,IAAI,CACFC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CACxB;IACD,OAAOP,GAAG;EACd,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACVK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,GAAG,CAAC;IAEjC,IAAI,CAACA,GAAG,CAACC,QAAQ,EAAE;MACf,MAAMD,GAAG;IACb;IACA,OAAOT,QAAQ,CAACW,eAAe,CAACF,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EACtD;AAGJ,CAAC,CAAC;AACN,OAAO,MAAMe,cAAc,GAAGnC,gBAAgB,CAC1C,0BAA0B,EAC1B,OAAOoC,MAAM,EAAEvB,QAAQ,KAAK;EACxB,MAAM;IAAEgB,KAAK;IAAEQ,EAAE;IAAEC;EAAO,CAAC,GAAGF,MAAM;EACpC,IAAI;IACA,MAAMhC,QAAQ,GAAG;MAAEkC,MAAM,EAAEA;IAAO,CAAC;IACnC,MAAMxB,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkCsB,EAAG,EAAC,EAAE;MAC7DN,MAAM,EAAE,OAAO;MACff,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC;QAC5D,cAAc,EAAE;MACpB,CAAC;MACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC9B,QAAQ;IACjC,CAAC,CAAC,CAACe,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;IAC5B,IAAIQ,KAAK,EAAEhB,QAAQ,CAAC0B,QAAQ,CAACd,gBAAgB,CAAC;MAAEI,KAAK,EAAEA;IAAM,CAAC,CAAC,CAAC,CAAC,KAC5DhB,QAAQ,CAAC0B,QAAQ,CAAC3B,eAAe,EAAE,CAAC;IAEzC,OAAOE,GAAG;EACd,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACVK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,GAAG,CAAC;IACjC,IAAI,CAACA,GAAG,CAACC,QAAQ,EAAE;MACf,MAAMD,GAAG;IACb;IACA,OAAOT,QAAQ,CAACW,eAAe,CAACF,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EACtD;AACJ,CAAC,CAAC;AAEN,MAAMoB,cAAc,GAAGvC,WAAW,CAAC;EAC/BwC,IAAI,EAAE,WAAW;EACjBvC,YAAY;EACZwC,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EACDC,aAAa,EAAE;IACX;IACA,CAAC/B,eAAe,CAACgC,OAAO,GAAIC,KAAK,IAAK;MAClC,IAAIA,KAAK,CAAC1C,SAAS,CAAC2C,MAAM,GAAG,CAAC,EAAED,KAAK,CAACvC,OAAO,GAAG,IAAI;IACxD,CAAC;IACD,CAACM,eAAe,CAACmC,SAAS,GAAG,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC5CH,KAAK,CAACvC,OAAO,GAAG,KAAK;MACrBuC,KAAK,CAAC1C,SAAS,GAAG6C,MAAM,CAACC,OAAO;IACpC,CAAC;IACD,CAACrC,eAAe,CAACsC,QAAQ,GAAG,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC3CH,KAAK,CAACvC,OAAO,GAAG,KAAK;MACrBuC,KAAK,CAACrC,aAAa,CAACC,OAAO,GAAG,IAAI;MAClCoC,KAAK,CAACrC,aAAa,CAACE,OAAO,GAAGsC,MAAM;IACxC,CAAC;IAED;IACA,CAACvB,gBAAgB,CAACmB,OAAO,GAAIC,KAAK,IAAK;MACnC,IAAIA,KAAK,CAACxC,aAAa,CAACyC,MAAM,GAAG,CAAC,EAAED,KAAK,CAACvC,OAAO,GAAG,IAAI;IAC5D,CAAC;IACD,CAACmB,gBAAgB,CAACsB,SAAS,GAAG,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC7CH,KAAK,CAACvC,OAAO,GAAG,KAAK;MACrBuC,KAAK,CAACxC,aAAa,GAAG2C,MAAM,CAACC,OAAO;IACxC,CAAC;IACD,CAACxB,gBAAgB,CAACyB,QAAQ,GAAG,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC5CH,KAAK,CAACvC,OAAO,GAAG,KAAK;MACrBuC,KAAK,CAACrC,aAAa,CAACC,OAAO,GAAG,IAAI;MAClCoC,KAAK,CAACrC,aAAa,CAACE,OAAO,GAAGsC,MAAM;IACxC,CAAC;IAED;IACA,CAAClB,cAAc,CAACc,OAAO,GAAIC,KAAK,IAAK;MACjCA,KAAK,CAACvC,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACwB,cAAc,CAACiB,SAAS,GAAG,CAACF,KAAK,EAAEG,MAAM,KAAK;MAAA;MAC3CH,KAAK,CAACvC,OAAO,GAAG,KAAK;MACrBuC,KAAK,CAAClC,KAAK,GAAGqC,MAAM,aAANA,MAAM,0CAANA,MAAM,CAAEC,OAAO,oDAAf,gBAAiBvC,OAAO;IAC1C,CAAC;IACD,CAACoB,cAAc,CAACoB,QAAQ,GAAG,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC1CH,KAAK,CAACvC,OAAO,GAAG,KAAK;MACrBuC,KAAK,CAACrC,aAAa,CAACC,OAAO,GAAG,IAAI;MAClCoC,KAAK,CAACrC,aAAa,CAACE,OAAO,GAAGsC,MAAM,CAACG,KAAK,CAACzC,OAAO;IACtD,CAAC;IAED;IACA,CAACyB,cAAc,CAACS,OAAO,GAAIC,KAAK,IAAK;MACjCA,KAAK,CAACtC,mBAAmB,GAAG,IAAI;IACpC,CAAC;IACD,CAAC4B,cAAc,CAACY,SAAS,GAAG,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC3CH,KAAK,CAACtC,mBAAmB,GAAG,KAAK;MACjCoB,OAAO,CAACC,GAAG,CAACoB,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC;IACD,CAACd,cAAc,CAACe,QAAQ,GAAG,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC1CH,KAAK,CAACtC,mBAAmB,GAAG,KAAK;MACjCsC,KAAK,CAACrC,aAAa,CAACC,OAAO,GAAG,IAAI;MAClCoC,KAAK,CAACrC,aAAa,CAACE,OAAO,GAAGsC,MAAM,CAACG,KAAK,CAACzC,OAAO;IACtD;EAGJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM0C,gBAAgB,GAAGZ,cAAc,CAACa,OAAO;AAEtD,eAAeb,cAAc,CAACc,OAAO"},"metadata":{},"sourceType":"module"}